version: '3.8' # 2.4 is the last version that supports depends_on conditions for service health

volumes:
    cassandra-data: {} 
    cassandra-post-data: {} 
    cassandra-story-data: {} 
    redis-data: {}
    redis.conf: {}
    auth-redis-data: {}
    auth-redis.conf: {}


networks:
  cassandra:  # docker network where all cassandra nodes will be put in
  node_net:
    ipam:
      driver: default
      config:
        - subnet: 172.28.0.0/16
  
services:
  cassandra_post:
    image: cassandra:3.11.8   # better to use a specific version, if you want to control upgrades
    container_name: cassandra_post
    mem_limit: 2g  # It's not strictly required, but it's better to have some memory limit
    ports:
      - 7000:9042
    expose: 
      - 7000
    volumes:
      - cassandra-post-data:/var/lib/cassandra
  cassandra_story:
    image: cassandra:3.11.8   # better to use a specific version, if you want to control upgrades
    container_name: cassandra_story
    mem_limit: 2g  # It's not strictly required, but it's better to have some memory limit
    ports:
      - 7001:9042
    volumes:
      - cassandra-story-data:/var/lib/cassandra
    
  redis:
    image: "redis:alpine"
    command: redis-server
    ports:
      - "6378:6379"
    volumes:
      - redis-data:/var/lib/redis
      - redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      node_net:
        ipv4_address: 172.28.1.4
  authredis:
    image: "redis:alpine"
    command: redis-server
    ports:
      - "6380:6379"
    volumes:
      - auth-redis-data:/var/lib/redis
      - auth-redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master
    networks:
      node_net:
        ipv4_address: 172.28.1.5

  mongo:
    image: 'mongo:4.2.6-bionic'
    container_name: mongo
    ports:
      - '27017:27017'
    volumes:
      - ./mongodata:/data/db
    restart: always

  # Mongo Express Web-based MongoDB admin interface
  mongo_express:
    image: mongo-express
    container_name: mongo_express
    depends_on:
      - 'mongo'
    ports:
      - '8081:8091'
    restart: always

  mongo-user:
    image: 'mongo:4.2.6-bionic'
    container_name: mongo-user
    ports:
      - '27018:27017'
    volumes:
      - ./mongodata:/data/db
    restart: always

  # Mongo Express Web-based MongoDB admin interface
  mongo_express-user:
    image: mongo-express
    container_name: mongo_express-user
    depends_on:
      - 'mongo-user'
    ports:
      - '8095:8091'
    restart: always

  mongo-search:
    image: 'mongo:4.2.6-bionic'
    container_name: mongo-search
    ports:
      - '27019:27017'
    volumes:
      - ./mongodata:/data/db
    restart: always

  # Mongo Express Web-based MongoDB admin interface
  mongo_express-search:
    image: mongo-express
    container_name: mongo_express-search
    depends_on:
      - 'mongo-search'
    ports:
      - '8096:8091'
    restart: always
      

        

